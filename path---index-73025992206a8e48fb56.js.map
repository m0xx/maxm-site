{"version":3,"sources":["webpack:///path---index-73025992206a8e48fb56.js","webpack:///./.cache/json/index.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/index.json","module","exports","data","site","siteMetadata","title","allMarkdownRemark","edges","node","frontmatter","tags","date","website","screenshot","html","pathContext"],"mappings":"AAAAA,cAAc,eAAgB,iBAExBC,+DACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,6BAAoCC,mBAAsBC,QAAUC,MAAQC,aAAeJ,MAAA,WAAAK,KAAA,6BAAAC,KAAA,2BAAAC,QAAA,mCAAAC,WAAA,kCAAoLC,KAAA,oIAA4IN,MAAQC,aAAeJ,MAAA,UAAAK,KAAA,qDAAAC,KAAA,2BAAAC,QAAA,yBAAAC,WAAA,iCAAgMC,KAAA,o2BAAg3BN,MAAQC,aAAeJ,MAAA,+BAAAK,KAAA,uCAAAC,KAAA,2BAAAC,QAAA,sBAAAC,WAAA,mCAAwMC,KAAA,mdAA2dN,MAAQC,aAAeJ,MAAA,kBAAAK,KAAA,yDAAAC,KAAA,2BAAAC,QAAA,KAAAC,WAAA,MAA6JC,KAAA,4SAAqTC","file":"path---index-73025992206a8e48fb56.js","sourcesContent":["webpackJsonp([142629428675168,168707334958949],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/index.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Maxime Morin - Portfolio\"}},\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"frontmatter\":{\"title\":\"Budgette\",\"tags\":\"NodeJS, Command Line, YAML\",\"date\":\"2017-10-31T00:00:00.000Z\",\"website\":\"https://github.com/m0xx/budgette\",\"screenshot\":\"images/screenshot-budgette.png\"},\"html\":\"<p>Utilitaire qui permet de faire des projections de budget récurrents à partir d’un fichier au format <code>YAML</code>. </p>\"}},{\"node\":{\"frontmatter\":{\"title\":\"Reduzer\",\"tags\":\"NodeJS, Docker, React, Redux, Redux-sagas, MongoDB\",\"date\":\"2017-01-01T00:00:00.000Z\",\"website\":\"http://reduzer.maxm.ca\",\"screenshot\":\"images/screenshot-reduzer.png\"},\"html\":\"<p>L’idée de créer Reduzer m’est venu dernièrement. J’ai souvent à faire des conversions de données, comme par\\nexemple convertir du <code>JSON</code> en <code>CSV</code>, filtrer des <code>dataset</code>, réorganiser des données, etc… La tâche en soit n’est pas\\ncompliquée, mais il y a toujours des cas spécifiques à gérer. Bref, je souhaitais me créer un environment de\\ndévelopement où je pourrais sauvegarder mes configurations et les réutiliser plus tard.</p>\\n<p>Reduzer est un application web qui permet de créer des ‘flow’ de transformation de données, les sauvegarder et évidement\\nles exécuter.</p>\\n<p>Voici quelques exemples:</p>\\n<ul>\\n<li><a href=\\\"http://reduzer.maxm.ca/workspace/HJ4c8Doob\\\">Simple conversion CSV —> JSON (Ignore les hommes)</a> </li>\\n<li><a href=\\\"http://reduzer.maxm.ca/workspace/r1X-_Pijb\\\">Calcul de l’age moyen</a></li>\\n</ul>\"}},{\"node\":{\"frontmatter\":{\"title\":\"Tournoi de golf \\\"Le Georges\\\"\",\"tags\":\"NodeJS, Twilio, React, MongoDB, Hapi\",\"date\":\"2015-06-01T00:00:00.000Z\",\"website\":\"http://legeorges.ca\",\"screenshot\":\"images/screenshot-legeorges.png\"},\"html\":\"<p>Tournoi très populaire au Québec, il accueil environ 200 joueurs et l’objectif principal de l’application est de\\nfournir aux utilisateurs un tableau des meneurs en direct. </p>\\n<p>Chaque joueur peux accèder à sa carte de pointage via une interface web et les bénévoles peuvent transmettre les\\npointages par message texte. </p>\\n<p>Il y a une version du tableau des meneurs concu spécifiquement pour diffuser les résultats en direct sur un écran géant.</p>\"}},{\"node\":{\"frontmatter\":{\"title\":\"Pool du Masters\",\"tags\":\"Java, Spring Boot, MySQL, Backbone, Marionette, Stripe\",\"date\":\"2015-01-01T00:00:00.000Z\",\"website\":null,\"screenshot\":null},\"html\":\"<p>Application de gestion de pools de golf. Chaque participant choisis un nombre de joueurs prédéterminé ensuite ils\\npeuvent suivre l’évolution de leur pointage tout au long du tournoi.\\nLa gestion des paiements est interfacé avec la librairie <a href=\\\"https://stripe.com/ca\\\">Stripe</a>.</p>\"}}]}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---index-73025992206a8e48fb56.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Maxime Morin - Portfolio\"}},\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"frontmatter\":{\"title\":\"Budgette\",\"tags\":\"NodeJS, Command Line, YAML\",\"date\":\"2017-10-31T00:00:00.000Z\",\"website\":\"https://github.com/m0xx/budgette\",\"screenshot\":\"images/screenshot-budgette.png\"},\"html\":\"<p>Utilitaire qui permet de faire des projections de budget récurrents à partir d’un fichier au format <code>YAML</code>. </p>\"}},{\"node\":{\"frontmatter\":{\"title\":\"Reduzer\",\"tags\":\"NodeJS, Docker, React, Redux, Redux-sagas, MongoDB\",\"date\":\"2017-01-01T00:00:00.000Z\",\"website\":\"http://reduzer.maxm.ca\",\"screenshot\":\"images/screenshot-reduzer.png\"},\"html\":\"<p>L’idée de créer Reduzer m’est venu dernièrement. J’ai souvent à faire des conversions de données, comme par\\nexemple convertir du <code>JSON</code> en <code>CSV</code>, filtrer des <code>dataset</code>, réorganiser des données, etc… La tâche en soit n’est pas\\ncompliquée, mais il y a toujours des cas spécifiques à gérer. Bref, je souhaitais me créer un environment de\\ndévelopement où je pourrais sauvegarder mes configurations et les réutiliser plus tard.</p>\\n<p>Reduzer est un application web qui permet de créer des ‘flow’ de transformation de données, les sauvegarder et évidement\\nles exécuter.</p>\\n<p>Voici quelques exemples:</p>\\n<ul>\\n<li><a href=\\\"http://reduzer.maxm.ca/workspace/HJ4c8Doob\\\">Simple conversion CSV —> JSON (Ignore les hommes)</a> </li>\\n<li><a href=\\\"http://reduzer.maxm.ca/workspace/r1X-_Pijb\\\">Calcul de l’age moyen</a></li>\\n</ul>\"}},{\"node\":{\"frontmatter\":{\"title\":\"Tournoi de golf \\\"Le Georges\\\"\",\"tags\":\"NodeJS, Twilio, React, MongoDB, Hapi\",\"date\":\"2015-06-01T00:00:00.000Z\",\"website\":\"http://legeorges.ca\",\"screenshot\":\"images/screenshot-legeorges.png\"},\"html\":\"<p>Tournoi très populaire au Québec, il accueil environ 200 joueurs et l’objectif principal de l’application est de\\nfournir aux utilisateurs un tableau des meneurs en direct. </p>\\n<p>Chaque joueur peux accèder à sa carte de pointage via une interface web et les bénévoles peuvent transmettre les\\npointages par message texte. </p>\\n<p>Il y a une version du tableau des meneurs concu spécifiquement pour diffuser les résultats en direct sur un écran géant.</p>\"}},{\"node\":{\"frontmatter\":{\"title\":\"Pool du Masters\",\"tags\":\"Java, Spring Boot, MySQL, Backbone, Marionette, Stripe\",\"date\":\"2015-01-01T00:00:00.000Z\",\"website\":null,\"screenshot\":null},\"html\":\"<p>Application de gestion de pools de golf. Chaque participant choisis un nombre de joueurs prédéterminé ensuite ils\\npeuvent suivre l’évolution de leur pointage tout au long du tournoi.\\nLa gestion des paiements est interfacé avec la librairie <a href=\\\"https://stripe.com/ca\\\">Stripe</a>.</p>\"}}]}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/index.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/index.json\n// module chunks = 142629428675168"],"sourceRoot":""}